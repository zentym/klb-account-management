import React from 'react';
import { Navigate, useLocation } from 'react-router-dom';
import useKeycloakAuth from '../hooks/useKeycloakAuth';

interface ProtectedRouteProps {
    children: React.ReactNode;
    requiredRoles?: string[];
}

export const ProtectedRoute: React.FC<ProtectedRouteProps> = ({
    children,
    requiredRoles = []
}) => {
    const { isAuthenticated, userInfo, loading, hasRole } = useKeycloakAuth();
    const location = useLocation();

    // Hi·ªÉn th·ªã loading khi ƒëang ki·ªÉm tra x√°c th·ª±c
    if (loading) {
        return (
            <div style={{
                display: 'flex',
                justifyContent: 'center',
                alignItems: 'center',
                height: '50vh',
                fontSize: '18px'
            }}>
                <div>
                    <div style={{ marginBottom: '10px' }}>üîê ƒêang ki·ªÉm tra quy·ªÅn truy c·∫≠p...</div>
                    <div style={{ textAlign: 'center' }}>
                        <div style={{
                            border: '2px solid #f3f3f3',
                            borderTop: '2px solid #3498db',
                            borderRadius: '50%',
                            width: '30px',
                            height: '30px',
                            animation: 'spin 1s linear infinite',
                            margin: '0 auto'
                        }}></div>
                    </div>
                </div>
            </div>
        );
    }

    // N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p, chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang login
    if (!isAuthenticated) {
        // Store the intended destination
        sessionStorage.setItem('returnUrl', location.pathname);
        return <Navigate to="/login" state={{ from: location }} replace />;
    }

    // Ki·ªÉm tra quy·ªÅn truy c·∫≠p theo role n·∫øu c√≥ y√™u c·∫ßu
    if (requiredRoles.length > 0) {
        const hasRequiredRole = requiredRoles.some(role => hasRole(role));

        if (!hasRequiredRole) {
            return (
                <div style={{
                    textAlign: 'center',
                    padding: '40px',
                    color: '#f44336',
                    backgroundColor: '#ffebee',
                    borderRadius: '8px',
                    margin: '20px',
                    border: '1px solid #ffcdd2'
                }}>
                    <h3>üö´ Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p</h3>
                    <p>B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p v√†o trang n√†y.</p>
                    <p>Quy·ªÅn y√™u c·∫ßu: <strong>{requiredRoles.join(', ')}</strong></p>
                    <p>Quy·ªÅn hi·ªán t·∫°i: <strong>{userInfo?.roles?.join(', ') || 'Kh√¥ng x√°c ƒë·ªãnh'}</strong></p>
                    <button
                        onClick={() => window.history.back()}
                        style={{
                            padding: '10px 20px',
                            backgroundColor: '#1976d2',
                            color: 'white',
                            border: 'none',
                            borderRadius: '4px',
                            cursor: 'pointer',
                            marginTop: '15px'
                        }}
                    >
                        Quay l·∫°i
                    </button>
                </div>
            );
        }
    }

    // N·∫øu ƒë√£ x√°c th·ª±c v√† c√≥ quy·ªÅn, hi·ªÉn th·ªã n·ªôi dung
    return <>{children}</>;
};

export default ProtectedRoute;
