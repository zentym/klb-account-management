# Script ki·ªÉm tra v√† li·ªát k√™ c√°c file kh√¥ng c·∫ßn thi·∫øt trong h·ªá th·ªëng KLB Banking

Write-Host "=== KI·ªÇM TRA C·∫§U TR√öC H·ªÜ TH·ªêNG KLB BANKING ===" -ForegroundColor Cyan
Write-Host ""

$unnecessaryItems = @()
$totalSize = 0

# Function t√≠nh k√≠ch th∆∞·ªõc th∆∞ m·ª•c
function Get-FolderSize {
    param([string]$path)
    if (Test-Path $path) {
        try {
            $size = (Get-ChildItem -Path $path -Recurse -File -ErrorAction SilentlyContinue | Measure-Object -Property Length -Sum).Sum
            return [math]::Round($size / 1MB, 2)
        }
        catch {
            return 0
        }
    }
    return 0
}

# Function ki·ªÉm tra v√† th√™m v√†o danh s√°ch
function Add-UnnecessaryItem {
    param([string]$path, [string]$type, [string]$reason, [string]$priority = "Medium")
    
    if (Test-Path $path) {
        $size = 0
        if ($type -eq "Folder") {
            $size = Get-FolderSize $path
        }
        else {
            $size = [math]::Round((Get-Item $path).Length / 1KB, 2)
        }
        
        $script:unnecessaryItems += [PSCustomObject]@{
            Path     = $path
            Type     = $type
            Reason   = $reason
            Priority = $priority
            Size     = $size
            Unit     = if ($type -eq "Folder") { "MB" } else { "KB" }
        }
        
        $script:totalSize += $size
        
        $color = switch ($priority) {
            "High" { "Red" }
            "Medium" { "Yellow" }
            "Low" { "Gray" }
        }
        
        Write-Host "[$priority] $type`: $path ($size $(if($type -eq 'Folder'){'MB'}else{'KB'})) - $reason" -ForegroundColor $color
    }
}

Write-Host "üîç ƒêang qu√©t c√°c file v√† th∆∞ m·ª•c kh√¥ng c·∫ßn thi·∫øt..." -ForegroundColor Green
Write-Host ""

# 1. BUILD ARTIFACTS (∆Øu ti√™n cao - c√≥ th·ªÉ x√≥a ngay)
Write-Host "1. üì¶ BUILD ARTIFACTS (c√≥ th·ªÉ t√°i t·∫°o):" -ForegroundColor Magenta
Add-UnnecessaryItem "e:\dowload\klb-account-management\kienlongbank-project\loan-service\target" "Folder" "Maven build output - c√≥ th·ªÉ x√≥a v√† build l·∫°i" "High"
Add-UnnecessaryItem "e:\dowload\klb-account-management\kienlongbank-project\customer-service\target" "Folder" "Maven build output - c√≥ th·ªÉ x√≥a v√† build l·∫°i" "High"
Add-UnnecessaryItem "e:\dowload\klb-account-management\kienlongbank-project\main-app\target" "Folder" "Maven build output - c√≥ th·ªÉ x√≥a v√† build l·∫°i" "High"
Add-UnnecessaryItem "e:\dowload\klb-account-management\kienlongbank-project\notification-service\target" "Folder" "Maven build output - c√≥ th·ªÉ x√≥a v√† build l·∫°i" "High"
Add-UnnecessaryItem "e:\dowload\klb-account-management\klb-frontend\build" "Folder" "React build output - c√≥ th·ªÉ x√≥a v√† build l·∫°i" "High"
Add-UnnecessaryItem "e:\dowload\klb-account-management\klb-frontend\node_modules" "Folder" "Node.js dependencies - c√≥ th·ªÉ c√†i l·∫°i b·∫±ng npm install" "High"

# 2. LOG FILES (∆Øu ti√™n trung b√¨nh)
Write-Host "`n2. üìÑ LOG FILES:" -ForegroundColor Magenta
Get-ChildItem -Path "e:\dowload\klb-account-management" -Recurse -Filter "*.log" -ErrorAction SilentlyContinue | ForEach-Object {
    Add-UnnecessaryItem $_.FullName "File" "Log file - c√≥ th·ªÉ x√≥a ƒë·ªÉ ti·∫øt ki·ªám dung l∆∞·ª£ng" "Medium"
}

# 3. CACHE & TEMP FILES
Write-Host "`n3. üóÇÔ∏è CACHE & TEMPORARY FILES:" -ForegroundColor Magenta
Add-UnnecessaryItem "e:\dowload\klb-account-management\klb-frontend\.env.local" "File" "Local environment - c√≥ th·ªÉ ch·ª©a d·ªØ li·ªáu test kh√¥ng c·∫ßn thi·∫øt" "Medium"

# T√¨m c√°c file .tmp
Get-ChildItem -Path "e:\dowload\klb-account-management" -Recurse -Filter "*.tmp" -ErrorAction SilentlyContinue | ForEach-Object {
    Add-UnnecessaryItem $_.FullName "File" "Temporary file - c√≥ th·ªÉ x√≥a" "High"
}

# 4. IDE CONFIG FILES (∆Øu ti√™n th·∫•p - ch·ªâ x√≥a n·∫øu kh√¥ng d√πng)
Write-Host "`n4. ‚öôÔ∏è IDE CONFIGURATION:" -ForegroundColor Magenta
Add-UnnecessaryItem "e:\dowload\klb-account-management\.vscode" "Folder" "VS Code settings - ch·ªâ x√≥a n·∫øu kh√¥ng d√πng VS Code" "Low"
Add-UnnecessaryItem "e:\dowload\klb-account-management\.idea" "Folder" "IntelliJ settings - ch·ªâ x√≥a n·∫øu kh√¥ng d√πng IntelliJ" "Low"

# T√¨m .DS_Store files (macOS)
Get-ChildItem -Path "e:\dowload\klb-account-management" -Recurse -Name ".DS_Store" -Force -ErrorAction SilentlyContinue | ForEach-Object {
    Add-UnnecessaryItem "e:\dowload\klb-account-management\$_" "File" "macOS system file - c√≥ th·ªÉ x√≥a" "Medium"
}

# 5. DUPLICATE FILES
Write-Host "`n5. üîÑ DUPLICATE FILES:" -ForegroundColor Magenta
# Ki·ªÉm tra package.json ·ªü root c√≥ tr√πng v·ªõi frontend kh√¥ng
if ((Test-Path "e:\dowload\klb-account-management\package.json") -and (Test-Path "e:\dowload\klb-account-management\klb-frontend\package.json")) {
    try {
        $rootPkg = Get-Content "e:\dowload\klb-account-management\package.json" -Raw | ConvertFrom-Json
        $frontendPkg = Get-Content "e:\dowload\klb-account-management\klb-frontend\package.json" -Raw | ConvertFrom-Json
        
        if ($rootPkg.name -eq $frontendPkg.name -and $rootPkg.version -eq $frontendPkg.version) {
            Add-UnnecessaryItem "e:\dowload\klb-account-management\package.json" "File" "Tr√πng v·ªõi klb-frontend/package.json - c√≥ th·ªÉ x√≥a" "Medium"
        }
    }
    catch {
        Write-Host "‚ö†Ô∏è Kh√¥ng th·ªÉ so s√°nh package.json files" -ForegroundColor Yellow
    }
}

# HELP.md files (auto-generated)
Get-ChildItem -Path "e:\dowload\klb-account-management\kienlongbank-project" -Recurse -Filter "HELP.md" -ErrorAction SilentlyContinue | ForEach-Object {
    Add-UnnecessaryItem $_.FullName "File" "Auto-generated Spring Boot help - c√≥ th·ªÉ x√≥a" "Low"
}

# 6. REDUNDANT SCRIPTS (c·∫ßn review)
Write-Host "`n6. üìú SCRIPTS C·∫¶N REVIEW:" -ForegroundColor Magenta
$potentiallyRedundant = @(
    @{Path = "manual-role-fix.ps1"; Reason = "Script fix role th·ªß c√¥ng - c√≥ th·ªÉ kh√¥ng c·∫ßn n·ªØa" },
    @{Path = "fix-user-roles.ps1"; Reason = "Script fix user roles - ki·ªÉm tra xem c√≤n d√πng kh√¥ng" },
    @{Path = "cleanup-all.ps1"; Reason = "Script cleanup - c√≥ th·ªÉ thay th·∫ø b·∫±ng script m·ªõi n√†y" },
    @{Path = "quick-cleanup.ps1"; Reason = "Script cleanup nhanh - c√≥ th·ªÉ tr√πng ch·ª©c nƒÉng" },
    @{Path = "reset-project.ps1"; Reason = "Script reset project - c·∫ßn c·∫©n th·∫≠n khi x√≥a" }
)

foreach ($item in $potentiallyRedundant) {
    $fullPath = "e:\dowload\klb-account-management\$($item.Path)"
    if (Test-Path $fullPath) {
        Add-UnnecessaryItem $fullPath "File" $item.Reason "Low"
    }
}

# SUMMARY & RECOMMENDATIONS
Write-Host "`n" + "="*80 -ForegroundColor Cyan
Write-Host "üìä T√ìM T·∫ÆT K·∫æT QU·∫¢ KI·ªÇM TRA" -ForegroundColor Green
Write-Host "="*80 -ForegroundColor Cyan

if ($unnecessaryItems.Count -eq 0) {
    Write-Host "`n‚úÖ Kh√¥ng t√¨m th·∫•y file kh√¥ng c·∫ßn thi·∫øt n√†o!" -ForegroundColor Green
}
else {
    # Nh√≥m theo priority
    $highPriority = $unnecessaryItems | Where-Object Priority -eq "High"
    $mediumPriority = $unnecessaryItems | Where-Object Priority -eq "Medium"  
    $lowPriority = $unnecessaryItems | Where-Object Priority -eq "Low"
    
    if ($highPriority) {
        Write-Host "`nüî¥ ∆ØU TI√äN CAO - C√ì TH·ªÇ X√ìA NGAY ($($highPriority.Count) items):" -ForegroundColor Red
        $highPriority | Sort-Object Size -Descending | ForEach-Object {
            Write-Host "  ‚Ä¢ $($_.Type): $($_.Path.Split('\')[-1]) - $($_.Size) $($_.Unit)" -ForegroundColor Red
            Write-Host "    L√Ω do: $($_.Reason)" -ForegroundColor Gray
        }
    }
    
    if ($mediumPriority) {
        Write-Host "`nüü° ∆ØU TI√äN TRUNG B√åNH - C√ÇN NH·∫ÆC X√ìA ($($mediumPriority.Count) items):" -ForegroundColor Yellow
        $mediumPriority | Sort-Object Size -Descending | ForEach-Object {
            Write-Host "  ‚Ä¢ $($_.Type): $($_.Path.Split('\')[-1]) - $($_.Size) $($_.Unit)" -ForegroundColor Yellow
            Write-Host "    L√Ω do: $($_.Reason)" -ForegroundColor Gray
        }
    }
    
    if ($lowPriority) {
        Write-Host "`n‚ö™ ∆ØU TI√äN TH·∫§P - C·∫¶N REVIEW ($($lowPriority.Count) items):" -ForegroundColor Gray
        $lowPriority | Sort-Object Size -Descending | ForEach-Object {
            Write-Host "  ‚Ä¢ $($_.Type): $($_.Path.Split('\')[-1]) - $($_.Size) $($_.Unit)" -ForegroundColor Gray
            Write-Host "    L√Ω do: $($_.Reason)" -ForegroundColor Gray
        }
    }
    
    $totalSizeMB = [math]::Round($totalSize, 2)
    Write-Host "`nüíæ T·ªïng dung l∆∞·ª£ng c√≥ th·ªÉ gi·∫£i ph√≥ng: $totalSizeMB MB" -ForegroundColor Green
    
    Write-Host "`nüõ†Ô∏è KHUY·∫æN NGH·ªä:" -ForegroundColor Yellow
    Write-Host "1. üî¥ ∆Øu ti√™n cao: Ch·∫°y 'mvn clean' ƒë·ªÉ x√≥a target folders" -ForegroundColor White
    Write-Host "2. üî¥ ∆Øu ti√™n cao: X√≥a node_modules (ch·∫°y 'npm install' khi c·∫ßn)" -ForegroundColor White
    Write-Host "3. üü° ∆Øu ti√™n trung: X√≥a log files c≈© ƒë·ªÉ ti·∫øt ki·ªám dung l∆∞·ª£ng" -ForegroundColor White
    Write-Host "4. ‚ö™ ∆Øu ti√™n th·∫•p: Review c√°c script c≈© tr∆∞·ªõc khi x√≥a" -ForegroundColor White
    
    Write-Host "`nüìã C√ÅCH X√ìA AN TO√ÄN:" -ForegroundColor Cyan
    Write-Host "‚Ä¢ Build artifacts: mvn clean (trong m·ªói service folder)" -ForegroundColor Gray
    Write-Host "‚Ä¢ Node modules: rm -rf node_modules (trong klb-frontend)" -ForegroundColor Gray
    Write-Host "‚Ä¢ Log files: t√¨m v√† x√≥a *.log files" -ForegroundColor Gray
    Write-Host "‚Ä¢ IDE configs: ch·ªâ x√≥a n·∫øu kh√¥ng s·ª≠ d·ª•ng IDE ƒë√≥" -ForegroundColor Gray
}

Write-Host "`nüìö T√†i li·ªáu tham kh·∫£o:" -ForegroundColor Cyan
Write-Host "  ‚Ä¢ Main project: kienlongbank-project/README.md" -ForegroundColor Gray
Write-Host "  ‚Ä¢ Frontend: klb-frontend/README.md" -ForegroundColor Gray
Write-Host "  ‚Ä¢ Legacy: legacy-scripts/README.md" -ForegroundColor Gray